library(pacman)
p_load(phyloseq,tidyverse,cccrm, magrittr,
       car, doParallel, cvequality)

objectsToImport <- c("psProvKB","psProvSM", "psProvMPA",      # names must be the same!
                     "psSalivaKB","psSalivaSM","psSalivaMPA",
                     "psFecesKB","psFecesSM", "psFecesMPA")
for (i in objectsToImport) {assign(i,readRDS(paste0("../PROVID19/objects/",i,".rds")))}
source("rarefy_even_depth2.R") # parallel version 

cols <- c("SM", "KB", "MPA")

divIDX <- 'Tail'

# rarefy + diversity 
div.fun <- function(ps) {
  rarefy_even_depth2(ps, rngseed = 1234) %>% 
  estimate_diversity(index = divIDX)
}

Div <- setNames(
  data.frame(div.fun(psSalivaSM),
             div.fun(psSalivaKB),
             div.fun(psSalivaMPA)),
  cols)

apply(Div, 2, shapiro.test) # Sourmash is not normal for Feces or Saliva

Div_long <- Div %>% 
  rownames_to_column("Sample") %>% 
  pivot_longer(values_to = divIDX, 
               names_to = "Method",
               cols = all_of(cols)) %>% 
  mutate(Method = factor(Method, levels = cols))

# Is there a significant difference between methods?
Div_long %>% 
  ggplot(aes(x = Method, y = !!sym(divIDX), group = Sample)) +
  geom_line() +geom_point(aes(colour = Method), size =3) + 
  theme_light() 
# Pretty obviously yeah
Div_long %>% 
  ggplot(aes(x = Method, y = !!sym(divIDX), fill = Method)) +
  geom_violin() + theme_light()
# model <- lmerTest::lmer(Shannon ~ Method + (1|Sample), data = Shannon_long)
# summary(model)

# Dynamic formula : 
formula <- reformulate('Method', response = divIDX)
leveneTest(formula, data = Div_long) # same variance
kruskal.test(formula, data = Div_long) # different distributions

#### Coefficient of variation ; testing whether they are different across categories
# Coefficient of variation for each sample: 
apply(Div, 2, function(x) (sd(x)/mean(x))) # Are they really different ?
# Using Feltz and Miller 1996 implemented in : 
# https://cran.r-project.org/web/packages/cvequality/vignettes/how_to_test_CVs.html
mslr_test(1e5, Div_long[[divIDX]], Div_long$Method) # Same variation coefficient

#############################
### Bland & Altman Analysis ###
#############################

BA_analysis <- compute_meandiff(Div, 'KB', 'SM')
(test.norm <- shapiro.test(BA_analysis$Diff) %$% p.value)

# If differences are not normal, log transform diversity counts :
if(test.norm <0.05) {
  BA_analysis <- Div %>% 
    mutate(across(everything(), log)) %>% 
    compute_meandiff('KB', 'SM')
  shapiro.test(BA_analysis$Diff) %$% p.value
}

# global statistics of means and differences:
mean_diff <- mean(BA_analysis$Diff)
s <- sd(BA_analysis$Diff)
upLimit = mean_diff + 1.96*s
loLimit = mean_diff - 1.96*s
n = length(BA_analysis$Diff)
mean_sd = sqrt(s^2/n)
s_sd = sqrt((3*s^2)/n)

# proportion of differences outside limits
mean(BA_analysis$Diff < loLimit | BA_analysis$Diff > upLimit) 

# Bland-Altman Plot :
ggplot(BA_analysis) +
  theme_light() +
  annotate(geom = 'rect', xmin = -Inf, xmax = Inf, ymin = upLimit - s_sd, 
           ymax =  upLimit + s_sd, alpha = 0.2, fill = 'blue') +
  annotate(geom = 'rect', xmin = -Inf, xmax = Inf, ymin = mean_diff - mean_sd, 
           ymax = mean_diff + mean_sd, alpha = 0.2, fill = 'red') +
  annotate(geom = 'rect', xmin = -Inf, xmax = Inf, ymin = loLimit - s_sd, 
           ymax = loLimit + s_sd, alpha = 0.2, fill = 'blue') +
  geom_hline(yintercept = mean_diff) +
  geom_hline(yintercept = upLimit, linetype = 'dashed') +
  geom_hline(yintercept = loLimit, linetype = 'dashed') +
  geom_point(aes(x = mean, y = Diff)) +
  labs(x = "Mean", y = "Difference", title = "Limits of Agreement between Kraken and Sourmash")

#### Trying out something... plot 3-way variation against mean
sd_mean <- Div %>% rowwise %>% 
  transmute(div_mean = mean(c_across(everything())),
            div_sd = sd(c_across(everything()))) 

cor.test(sd_mean$div_mean, sd_mean$div_sd, method = 'spearman') # no correlation
plot(div_sd~div_mean, data = sd_mean)

####################################################
### (Overall) Concordance Correlation Coefficient ###
# Should we scale the diversities for the CCC test ? Only center?
####################################################

# epiR method https://search.r-project.org/CRAN/refmans/epiR/html/epi.occc.html
Div %>% select(KB, SM) %>% 
  # rationale for scaling ?
  mutate(across(everything(), ~scale(.x, scale = FALSE))) %>% 
  epiR::epi.occc(pairs = TRUE)

# CCCRM method
Div_scaled_long <- Div %>% 
  # Center only, because variances are equal
  mutate(across(everything(), scale)) %>% 
  rownames_to_column("Sample") %>% 
  pivot_longer(values_to = divIDX, 
               names_to = "Method",
               cols = all_of(cols)) %>% 
  mutate(Method = factor(Method, levels = cols)) %>% 
  left_join(psSalivaKB@sam_data %>% data.frame %>% 
              dplyr::select(treatDay) %>% 
              rownames_to_column("Sample"),
            by = "Sample")

ccc_result <- cccvc(Div_scaled_long %>% filter(Method !="MPA"), ry = divIDX, 
                    rind = "Sample", rmet = "Method")
summary(ccc_result)

ccc_result <- cccvc(Div_scaled_long %>% 
                      filter(Method != 'KB'), 
                    ry = "Shannon", 
                    rind = "Sample", rmet = "Method")
summary(ccc_result)
